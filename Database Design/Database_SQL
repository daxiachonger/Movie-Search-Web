# API_1 http://www.myapifilms.com
# API_2 http://www.omdbapi.com

# Retrieve data from API_1 into ACTOR table. Retrieve data from API_2 into MOVIE table. Both APIs under the same MOVIE_IMDB_ID
# API_2 is used for ACT, DIRECT, and GENRE table.

#Notes: use IMDB as primary key to ensure uniqueness for actor and movie


CREATE DATABASE ROTTEN_TOMATO;

CREATE TABLE ACTOR
	(ACTOR_IMDB_ID VARCHAR(20) NOT NULL,
	 ACTOR_NAME VARCHAR(30) NOT NULL,
             PHOTO VARCHAR(200),
             PROFILE VARCHAR(100),
	 PRIMARY KEY (ACTOR_IMDB_ID));

CREATE TABLE MOVIE
	(MOVIE_IMDB_ID VARCHAR(20) NOT NULL,
	 TITLE VARCHAR(30) NOT NULL,
             YEAR INT,
	 RUNTIME VARCHAR(20),
             DIRECTOR VARCHAR(30),   %redundancy for db, but make query fast
             ACTORS VARCHAR(100),    %comma separated string including main actors
	 PLOT VARCHAR(500),
	 POSTER VARCHAR(100),
	 IMDB_RATING FLOAT,
	 TOMATOMETER FLOAT,
     	 TOMATORATING FLOAT,
     	 TOMATOFRESH FLOAT,
     	 TOMATOROTTEN FLOAT,
     	 TOMATOUSERMETER FLOAT,
     	 TOMATOUSERRATING FLOAT,
	 PRIMARY KEY (MOVIE_IMDB_ID));


CREATE TABLE ACT
	(MOVIE_IMDB_ID VARCHAR(20) NOT NULL,
             ACTOR_IMDB_ID VARCHAR(20) NOT NULL,
             ACT_CHARACTER VARCHAR(30),
	 PRIMARY KEY (MOVIE_IMDB_ID, ACTOR_IMDB_ID),
	 FOREIGN KEY (MOVIE_IMDB_ID) REFERENCES MOVIE(MOVIE_IMDB_ID),
	 FOREIGN KEY (ACTOR_IMDB_ID) REFERENCES ACTOR(ACTOR_IMDB_ID));

CREATE TABLE DIRECT
            (MOVIE_IMDB_ID VARCHAR(20) NOT NULL,
             DIRECTOR_IMDB_ID VARCHAR(20) NOT NULL,
             PRIMARY KEY (MOVIE_IMDB_ID, DIRECTOR_IMDB_ID),
             FOREIGN KEY (MOVIE_IMDB_ID) REFERENCES MOVIE(MOVIE_IMDB_ID),
             FOREIGN KEY (DIRECTOR_IMDB_ID) REFERENCES ACTOR(ACTOR_IMDB_ID));

CREATE TABLE GENRE
	(MOVIE_IMDB_ID VARCHAR(20) NOT NULL,
             GENRE VARCHAR(20) NOT NULL,
	 PRIMARY KEY (Genre, MOVIE_IMDB_ID),
	 FOREIGN KEY (MOVIE_IMDB_ID) REFERENCES MOVIE(MOVIE_IMDB_ID));
